This module defines an integer addition function ``add_integer(a, b=98)``.

Usage
=====

``add_integer(...)``` returns the addition of its two arguments. For numbers,
that value is equivalent to using the ``+`` operator.

Importing function from the module:
    >>> add_integer = __import__('0-add_integer').add_integer

Adding 2 and 3
    >>> add_integer(2, 3)
    5

Adding 5 and -1
    >>> add_integer(5, -1)
    4

Adding 2.1 and 98
    >>> add_integer(2.1, 98)
    100

Adding 100.3 and -2
    >>> add_integer(100.3, -2)
    98

Passing one argument
    >>> add_integer(2)
    100

Adding an integer number and a string
    >>> add_integer(4, "School")
    Traceback (most recent call last):
	      ...
    TypeError: b must be an integer

Passing None
    >>> add_integer(None)
    Traceback (most recent call last):
	      ...
    TypeError: a must be an integer

Case Overflow:

    >>> add_integer(float('inf'), 0)
    Traceback (most recent call last):
    	      ...
    OverflowError: cannot convert float infinity to integer

Case Overflow 2:

    >>> add_integer(float('inf'), float('-inf'))
    Traceback (most recent call last):
    	      ...
    OverflowError: cannot convert float infinity to integer

Case NaN:

    >>> add_integer(0, float('nan'))
    Traceback (most recent call last):
    	      ...
    ValueError: cannot convert float NaN to integer
